syntax = "proto3";

package chat;

service ChatService {
  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse);
  rpc GetMessages(GetMessagesRequest) returns (GetMessagesResponse);
  rpc RemoveRoomMessages(RemoveRoomMessagesRequest) returns (RemoveRoomMessagesResponse);
  rpc JoinRoom(JoinRoomRequest) returns (JoinRoomResponse);
  rpc LeaveRoom(LeaveRoomRequest) returns (LeaveRoomResponse);
}

message ChatMessage {
  string id = 1;
  string room_id = 2;
  string sender = 3;
  string sender_name = 4;
  string text = 5;
  string timestamp = 6;
  optional string fileUrl = 7;
  optional string fileName = 8;
  optional string fileType = 9;
  optional int64 fileSize = 10;
  optional bool isImage = 11;
  // Reply fields
  optional ReplyInfo replyTo = 12;
}

// Reply information
message ReplyInfo {
  string messageId = 1;
  string senderName = 2;
  string text = 3;
  optional bool isFile = 4;
}

// SendMessage
message SendMessageRequest {
  string room_id = 1;
  string sender = 2;
  string sender_name = 3;
  string text = 4;
  optional string fileUrl = 5;
  optional string fileName = 6;
  optional string fileType = 7;
  optional int64 fileSize = 8;
  optional bool isImage = 9;
  // Reply fields
  optional ReplyInfo replyTo = 10;
  // NEW: Room key for semantic context isolation
  optional string room_key = 11;
}

message SendMessageResponse {
  bool success = 1;
  ChatMessage message = 2;
  optional string error = 3;
}

// GetMessages
message GetMessagesRequest {
  string room_id = 1;
}

message GetMessagesResponse {
  bool success = 1;
  repeated ChatMessage messages = 2;
}

// RemoveRoomMessages
message RemoveRoomMessagesRequest {
  string room_id = 1;
}

message RemoveRoomMessagesResponse {
  bool success = 1;
}

// JoinRoom
message JoinRoomRequest {
  string room_id = 1;
  string user_name = 2;
}

message JoinRoomResponse {
  bool success = 1;
  string message = 2;
}

// LeaveRoom
message LeaveRoomRequest {
  string room_id = 1;
}

message LeaveRoomResponse {
  bool success = 1;
}
